name: CI/CD for MERN App with MongoDB on Minikube

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build and Push Docker images for server and client
      - name: Build and push server Docker image
        run: |
          # Replace `your-docker-username` with your actual Docker Hub username
          docker build -t bhimanivasu/menrapp:latest -f express.js_server/Dockerfile .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push bhimanivasu/mernapp:frontned

      - name: Build and push client Docker image
        run: |
          # Replace `your-docker-username` with your actual Docker Hub username
          docker build -t bhimanivasu/mernapp:backend -f react.js_app/Dockerfile .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push bhimanivasu/mernapp:backend

      # Step 4: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.24.0

      # Step 5: Set up Kubeconfig
      - name: Configure kubectl with Kubeconfig
        run: |
          # `KUBE_CONFIG_DATA` is a base64-encoded Kubeconfig file stored in GitHub Secrets
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      # Step 6: Deploy MongoDB, MERN App, and HPA to Kubernetes
      - name: Deploy MongoDB and MERN App to Kubernetes
        run: |
          kubectl apply -f k8s/configmap.yaml            # Apply the ConfigMap
          kubectl apply -f k8s/mongodb-deployment.yaml   # Deploy MongoDB
          kubectl apply -f k8s/mern-server-deployment.yaml # Deploy MERN server
          kubectl apply -f k8s/mern-client-deployment.yaml # Deploy MERN client
          kubectl apply -f k8s/hpa.yaml                 # Apply Horizontal Pod Autoscaler (HPA)

      # Step 7: Verify Deployment
      - name: Check Deployment Status
        run: |
          kubectl rollout status deployment/mern-server
          kubectl rollout status deployment/mern-client
